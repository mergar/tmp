#!/usr/local/bin/cbsd
#v10.3.0
MYARG="jname dsk mnt"
MYOPTARG=""
MYDESC="Import and mount ZFS-based storage to specified mount point"
CBSDMODULE="convectix"
EXTHELP="wf_bhyve"

. ${subr}

. ${cbsdinit}

. ${system}
. ${distdir}/bhyve.subr

dsk_sql=$( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite "SELECT dsk_path FROM bhyvedsk WHERE jname=\"${jname}\" AND dsk_path=\"${dsk}\"" 2>/dev/null );

[ -z "${dsk_sql}" ] && err 1 "${N1_COLOR}No such SQL records for: ${N2_COLOR}${dsk}${N1_COLOR} storage for ${N2_COLOR}${jname}${N0_COLOR}"

dsk_fullpath="${jaildatadir}/${jname}-${jaildatapref}/${dsk}"

[ ! -r "${dsk_fullpath}" ] && err 1 "${N1_COLOR}No such image: ${N2_COLOR}${dsk_fullpath}${N0_COLOR}"

. ${mdtools}

mddev=$( eval find_md_by_img ${dsk_fullpath} )

if [ -z "${mddev}" ]; then
	set -e
	mddev=$( /sbin/mdconfig -a -t vnode -f "${dsk_fullpath}" 2>/dev/null )
	set +u
fi

[ -z "${mddev}" ] && err 1 "${N1_COLOR}Error mdconfig for: ${N2_COLOR}${dsk_fullpath}${N0_COLOR}"

#echo $mddev

[ ! -d "${mnt}" ] && /bin/mkdir -p ${mnt}

zfsdev=
pool=

eval $( /sbin/zpool import -N |${EGREP_CMD} -E "(pool: )|(md0.*ONLINE$)" |${AWK_CMD} '{printf $1" "$2"\n"}' |while read _x _y; do
	[ -z "${_x}" -o -z "${_y}" ] && continue
	[ "${_x}" = "pool:" ] && echo "pool=${_y}"
	[ "${_y}" = "ONLINE" ] && echo "zfsdev=${_x}"
	unset _x _y
done )

#/sbin/zpool import -f -R ${mnt} tank

if [ -z "${pool}" ]; then
	/sbin/mdconfig -d -u ${mddev}
	err 1 "Unable to determine ZFS pool for ${dsk_fullpath}"
fi

if [ -z "${zfsdev}" ]; then
	/sbin/mdconfig -d -u ${mddev}
	err 1 "Unable to determine ZFS disk for pool ${pool} on ${dsk_fullpath}"
fi

res=$( /sbin/zpool import -f -R ${mnt} ${pool} 2>&1 )

if [ $? -ne 0 ]; then
	mdconfig -d -u ${mddev}
	err 1 "$res"
fi

echo "Done"

/sbin/zfs unmount ${mnt} || /sbin/umount -f ${mnt}
/sbin/zpool export ${pool}
/sbin/mdconfig -d -u ${mddev}
